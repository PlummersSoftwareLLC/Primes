# Read input
0o000 ğŸ˜ºğŸ˜¼ğŸ˜¿ğŸ™€ğŸ™€ Memory 7 through N+8 = input (N characters), newline, null

# Initialize variables
0o001 ğŸ˜»ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ Memory 0 = 0 (n)
0o002 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ğŸ˜¿ğŸ™€ğŸ™€ Memory 1 = 7 (input_ptr = address of input)

# Initialize constants
0o003 ğŸ˜»ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¾ğŸ˜¸ğŸ™€ğŸ™€ Memory 2 = 0o60 (48 = '0')
0o004 ğŸ˜»ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ Memory 3 = 0o12 (10)
0o005 ğŸ˜»ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¹ğŸ™€ğŸ™€ Memory 4 = 1

# input_loop: Get contents of input_ptr
0o006 ğŸ˜»ğŸ˜¹ğŸ˜½ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ Memory 5 = 0
0o007 ğŸ˜¿ğŸ™€ğŸ˜¼ğŸ˜½ğŸ™€ğŸ™€ğŸ˜¹ğŸ™€ğŸ™€ Memory 5 += Memory 1 (input_ptr)
0o010 ğŸ˜¼ğŸ˜¾ğŸ˜½ğŸ™€ğŸ™€ Memory 5 = pointer(Memory 5) (digit)
0o011 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¹ğŸ™€ğŸ™€ğŸ˜¼ğŸ™€ğŸ™€ Memory 1 += Memory 4 (increment input_ptr)

# Convert digit to number
0o012 ğŸ˜¿ğŸ™€ğŸ˜ºğŸ˜½ğŸ™€ğŸ™€ğŸ˜ºğŸ™€ğŸ™€ Memory 5 -= Memory 2 (value = char - '0')

# If invalid digit, goto done_input
0o013 ğŸ˜»ğŸ˜¹ğŸ˜¾ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ˜¿ Memory 6 = -0o11 (-9)
0o014 ğŸ˜¿ğŸ™€ğŸ˜¾ğŸ˜¾ğŸ™€ğŸ™€ğŸ˜½ğŸ™€ğŸ™€ Memory 6 += Memory 5 (value - 9)
0o015 ğŸ˜½ğŸ˜¿ğŸ˜¾ğŸ™€ğŸ™€ğŸ˜ºğŸ˜»ğŸ™€ğŸ™€ If Memory 6 > 0, goto 0o24 (0o23 + 1) (if value > 9)
0o016 ğŸ˜»ğŸ˜¹ğŸ˜¾ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ Memory 6 = 0
0o017 ğŸ˜¿ğŸ™€ğŸ˜ºğŸ˜¾ğŸ™€ğŸ™€ğŸ˜½ğŸ™€ğŸ™€ Memory 6 -= Memory 5 (-value)
0o020 ğŸ˜½ğŸ˜¿ğŸ˜¾ğŸ™€ğŸ™€ğŸ˜ºğŸ˜»ğŸ™€ğŸ™€ If Memory 6 > 0, goto 0o24 (0o23 + 1) (if value < 0)

# n = n * 10 + value
0o021 ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ğŸ˜»ğŸ™€ğŸ™€ Memory 0 *= Memory 3 (n * 10)
0o022 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¸ğŸ™€ğŸ™€ğŸ˜½ğŸ™€ğŸ™€ Memory 0 += Memory 5 (n * 10 + value)
0o023 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ˜¿ğŸ˜½ğŸ™€ğŸ™€ goto 6 (5 + 1) (input_loop)

# done_input: sieve (Memory 1) = 0
0o024 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€

# factor_inc (Memory 4) = 6
0o025 ğŸ˜»ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¾ğŸ™€ğŸ™€

# outer_loop_counter (Memory 5) = 9 - n
0o026 ğŸ˜»ğŸ˜¹ğŸ˜½ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ Memory 5 = 9 (0o11)
0o027 ğŸ˜¿ğŸ™€ğŸ˜ºğŸ˜½ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ Memory 5 -= Memory 0 (n)

# factor_sq_inc (Memory 6) = 16 (0o20)
0o030 ğŸ˜»ğŸ˜¹ğŸ˜¾ğŸ™€ğŸ™€ğŸ˜ºğŸ˜¸ğŸ™€ğŸ™€

# mask (Memory 7) = 1
0o031 ğŸ˜»ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ™€ğŸ™€

# start_mask (Memory 8 [0o10]) = 8 (0o10)
0o032 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€

# mask_multiplier (Memory 9 [0o11]) = 8 (0o10)
0o033 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€

# start_mask_multiplier (Memory 10 [0o12]) = 256 (0o400)
0o034 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¼ğŸ˜¸ğŸ˜¸ğŸ™€ğŸ™€

# two (Memory 11 [0o13]) = 2
0o035 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ğŸ˜ºğŸ™€ğŸ™€

# four (Memory 12 [0o14]) = 4
0o036 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¼ğŸ™€ğŸ™€

# eight (Memory 13 [0o15]) = 8 (0o10)
0o037 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜½ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€

# sixteen (Memory 14 [0o16]) = 16 (0x20)
0o040 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜¾ğŸ™€ğŸ™€ğŸ˜ºğŸ˜¸ğŸ™€ğŸ™€

# minus_two (Memory 19 [0o23]) = -2
0o041 ğŸ˜»ğŸ˜¹ğŸ˜ºğŸ˜»ğŸ™€ğŸ™€ğŸ˜ºğŸ™€ğŸ˜¿

# outer: if outer_loop_counter > 0, goto done
0o042 ğŸ˜½ğŸ˜¿ğŸ˜½ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ˜¾ğŸ™€ğŸ™€ if output_loop_counter (Memory 5) > 0, goto done (0o107) (0o106 + 1)

# temp = floor(sieve / mask) (Memory 15 [0o17])
0o043 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ temp = 0 (Memory 15 [0o17])
0o044 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ™€ğŸ™€ temp += sieve (Memory 1)
0o045 ğŸ˜¿ğŸ™€ğŸ˜¿ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¿ğŸ™€ğŸ™€ temp /= mask (Memory 7)

# if temp - floor(temp / 2) * 2 > 0, goto next_outer_factor
0o046 ğŸ˜»ğŸ˜¹ğŸ˜ºğŸ˜¸ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ temp2 = 0 (Memory 16 [0o20])
0o047 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜ºğŸ˜¸ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ temp2 += temp (Memory 15 [0o17])
0o050 ğŸ˜¿ğŸ™€ğŸ˜¿ğŸ˜ºğŸ˜¸ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ temp2 /= two (Memory 11 [0o13])
0o051 ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜ºğŸ˜¸ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ temp2 *= two
0o052 ğŸ˜¿ğŸ™€ğŸ˜ºğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜ºğŸ˜¸ğŸ™€ğŸ™€ temp -= temp2
0o053 ğŸ˜½ğŸ˜¿ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¿ğŸ˜¾ğŸ™€ğŸ™€ if temp > 0, goto next_outer_factor (0o77) (0o76 + 1)

# inner_loop_count = outer_loop_counter
0o054 ğŸ˜»ğŸ˜¹ğŸ˜ºğŸ˜¹ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ inner_loop_count (Memory 17 [0o21]) = 0
0o055 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜ºğŸ˜¹ğŸ™€ğŸ™€ğŸ˜½ğŸ™€ğŸ™€ inner_loop_count += outer_loop_counter (Memory 5)

# inner_sieve = floor(sieve / start_mask)
0o056 ğŸ˜»ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ = inner_sieve (Memory 2) = 0
0o057 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¹ğŸ™€ğŸ™€ inner_sieve += sieve (Memory 1)
0o060 ğŸ˜¿ğŸ™€ğŸ˜¿ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€ inner_sieve /= start_mask (Memory 8 [0o10])

# sieve_mask = start_mask
0o061 ğŸ˜»ğŸ˜¹ğŸ˜ºğŸ˜ºğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ sieve_mask = 0 (Memory 18 [0o22])
0o062 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜ºğŸ˜ºğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€ sieve_mask += start_mask (Memory 8 [0o10])

# inner: if inner_loop_count > 0, goto next_outer_factor
0o063 ğŸ˜½ğŸ˜¿ğŸ˜ºğŸ˜¹ğŸ™€ğŸ™€ğŸ˜¿ğŸ˜¾ğŸ™€ğŸ™€ if inner_loop_count (Memory 17 [0o21]) > 0, goto next_outer_factor (0o77) (0o076 + 1)

# if inner_sieve - floor(inner_sieve / 2) * 2 > 0, goto next_inner_factor
0o064 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ temp = 0 (Memory 15 [0o17])
0o065 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜ºğŸ™€ğŸ™€ temp += inner_sieve (Memory 2)
0o066 ğŸ˜¿ğŸ™€ğŸ˜¿ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ temp /= two (Memory 11 [0o13])
0o067 ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜ºğŸ˜»ğŸ™€ğŸ™€ temp *= minus_two (Memory 19 [0o23])
0o070 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜ºğŸ™€ğŸ™€ temp += inner_sieve (Memory 2)
0o071 ğŸ˜½ğŸ˜¿ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¿ğŸ˜ºğŸ™€ğŸ™€ if temp > 0, goto next_inner_factor (0o73) (0o72 + 1)

# sieve += sieve_mask
0o072 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¹ğŸ™€ğŸ™€ğŸ˜ºğŸ˜ºğŸ™€ğŸ™€ sieve (Memory 1) += sieve_mask (Memory 18 [0o22])

# next_inner_factor: inner_loop_count += factor_inc
0o073 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜ºğŸ˜¹ğŸ™€ğŸ™€ğŸ˜¼ğŸ™€ğŸ™€ inner_loop_count (Memory 17 [0o21]) += factor_inc (Memory 4)

# inner_sieve /= mask_multiplier
0o074 ğŸ˜¿ğŸ™€ğŸ˜¿ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ inner_sieve (Memory 2) /= start_mask_multiplier (Memory 9 [0o11])

# sieve_mask *= mask_multiplier
0o075 ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜ºğŸ˜ºğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ sieve_mask (Memory 18 [0o22]) *= mask_multiplier (Memory 9 [0o11])

# goto inner
0o076 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ˜¿ğŸ˜¾ğŸ˜ºğŸ™€ğŸ™€ goto 0o63 (0o62 + 1)

# next_outer_factor: factor_inc += 4
0o077 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ factor_inc (Memory 4) += four (Memory 12 [0o14])

# outer_loop_counter += factor_sq_inc
0o100 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜½ğŸ™€ğŸ™€ğŸ˜¾ğŸ™€ğŸ™€ outer_loop_counter (Memory 5) += factor_sq_inc (Memory 6)

# factor_sq_inc += 8
0o101 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¾ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜½ğŸ™€ğŸ™€ factor_sq_inc (Memory 6) + eight (Memory 13 [0o15])

# mask *= 2
0o102 ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ mask (Memory 7) *= two (Memory 11 [0o13])

# start_mask *= start_mask_multiplier
0o103 ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ start_mask (Memory 8 [0o10]) *= start_mask_multiplier (Memory 10 [0o12])

# mask_multiplier *= 4
0o104 ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ mask_multiplier (Memory 9 [0o11]) *= four (Memory 12 [0o14])

# start_mask_multiplier *= 16
0o105 ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¾ğŸ™€ğŸ™€ start_mask_multiplier (Memory 10 [0o12]) *= sixteen (Memory 14 [0o16])

# goto outer
0o106 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ˜¿ğŸ˜¼ğŸ˜¹ğŸ™€ğŸ™€ goto 0o42 (0o41 + 1)

# done: output sieve as value and newline
0o107 ğŸ˜¼ğŸ˜¼ğŸ˜¹ğŸ™€ğŸ™€ Output Memory 1 as value
0o110 ğŸ˜½ğŸ˜¼ğŸ˜»ğŸ™€ğŸ™€ Output Memory 3 ("\n")
0o111 ğŸ™€ğŸ™€ Exit
